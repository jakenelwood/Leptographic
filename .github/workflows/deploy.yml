name: Deploy to leptographic.com

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown

    - name: Install cargo-leptos
      run: cargo install cargo-leptos

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Tailwind CSS
      run: npm install -g tailwindcss

    - name: Build Leptos app
      run: cargo leptos build --release

    - name: Create deployment package
      run: |
        mkdir deploy
        # Copy the built site files
        cp -r target/site/* deploy/
        # Copy the server binary
        cp target/release/leptos-radix-ui deploy/leptographic-app
        # Create archive
        tar -czf leptographic-deploy.tar.gz -C deploy .

    - name: Upload deployment package
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USER }}
        key: ${{ secrets.HETZNER_SSH_KEY }}
        source: "leptographic-deploy.tar.gz"
        target: "/tmp/"

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USER }}
        key: ${{ secrets.HETZNER_SSH_KEY }}
        script: |
          # Stop the service
          sudo systemctl stop leptographic || true

          # Create deployment directory
          sudo mkdir -p /var/www/leptographic

          # Extract new files
          cd /var/www/leptographic
          sudo tar -xzf /tmp/leptographic-deploy.tar.gz
          sudo chmod +x leptographic-app

          # Start the service
          sudo systemctl start leptographic
          sudo systemctl enable leptographic

          # Check status
          sudo systemctl status leptographic --no-pager

    - name: Purge Cloudflare cache
      uses: jakejarvis/cloudflare-purge-action@master
      env:
        CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
        CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
